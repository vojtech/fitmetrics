/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.fediim.fitmetrics.api.apis

import com.fediim.fitmetrics.api.infrastructure.*
import io.ktor.client.HttpClientConfig
import io.ktor.client.engine.HttpClientEngine

open class HeartRateIntradayTimeSeriesApi(
    baseUrl: String = ApiClient.BASE_URL,
    httpClientEngine: HttpClientEngine? = null,
    httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null
) : ApiClient(
    baseUrl,
    httpClientEngine,
    httpClientConfig
) {
    /**
     * GET /1/user/-/activities/heart/date/{date}/1d/{detail-level}.json
     * Get Heart Rate Intraday Time Series
     * Returns the intraday time series for a given resource in the format requested. If your application has the appropriate access, your calls to a time series endpoint for a specific day (by using start and end dates on the same day or a period of 1d), the response will include extended intraday values with a one-minute detail level for that day. Unlike other time series calls that allow fetching data of other users, intraday data is available only for and to the authorized user.
     * @param date The date in the format of yyyy-MM-dd or today.
     * @param detailLevel The number of data points to include either 1sec, 1min, 5min or 15min.
     * @return void
     */
    open suspend fun getHeartByDateIntraday(
        date: java.time.LocalDate,
        detailLevel: kotlin.String
    ): HttpResponse<Unit> {
        val localVariableAuthNames = listOf<String>("oauth2")

        val localVariableBody =
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig =
            RequestConfig<kotlin.Any?>(
                RequestMethod.GET,
                "/1/user/-/activities/heart/date/{date}/1d/{detail-level}.json".replace(
                    "{" + "date" + "}",
                    "$date"
                ).replace("{" + "detail-level" + "}", "$detailLevel"),
                query = localVariableQuery,
                headers = localVariableHeaders,
                requiresAuthentication = true
            )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }

    /**
     * GET /1/user/-/activities/heart/date/{date}/{end-date}/{detail-level}.json
     * Get Heart Rate Intraday Time Series
     * Returns the intraday time series for a given resource in the format requested. If your application has the appropriate access, your calls to a time series endpoint for a specific day (by using start and end dates on the same day or a period of 1d), the response will include extended intraday values with a one-minute detail level for that day. Unlike other time series calls that allow fetching data of other users, intraday data is available only for and to the authorized user.
     * @param date The date in the format of yyyy-MM-dd or today.
     * @param endDate The end date in the format of yyyy-MM-dd or today.
     * @param detailLevel The number of data points to include either 1sec, 1min, 5min or 15min.
     * @return void
     */
    open suspend fun getHeartByDateRangeIntraday(
        date: java.time.LocalDate,
        endDate: java.time.LocalDate,
        detailLevel: kotlin.String
    ): HttpResponse<Unit> {
        val localVariableAuthNames = listOf<String>("oauth2")

        val localVariableBody =
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig =
            RequestConfig<kotlin.Any?>(
                RequestMethod.GET,
                "/1/user/-/activities/heart/date/{date}/{end-date}/{detail-level}.json".replace(
                    "{" + "date" + "}",
                    "$date"
                ).replace(
                    "{" + "end-date" + "}",
                    "$endDate"
                ).replace("{" + "detail-level" + "}", "$detailLevel"),
                query = localVariableQuery,
                headers = localVariableHeaders,
                requiresAuthentication = true
            )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }

    /**
     * GET /1/user/-/activities/heart/date/{date}/{end-date}/{detail-level}/time/{start-time}/{end-time}.json
     * Get Heart Rate Intraday Time Series
     * Returns the intraday time series for a given resource in the format requested. If your application has the appropriate access, your calls to a time series endpoint for a specific day (by using start and end dates on the same day or a period of 1d), the response will include extended intraday values with a one-minute detail level for that day. Unlike other time series calls that allow fetching data of other users, intraday data is available only for and to the authorized user.
     * @param date The date in the format of yyyy-MM-dd or today.
     * @param endDate The end date in the format of yyyy-MM-dd or today.
     * @param detailLevel The number of data points to include either 1sec, 1min, 5min or 15min.
     * @param startTime The start of the period in the format of HH:mm.
     * @param endTime The end time of the period in the format of HH:mm.
     * @return void
     */
    open suspend fun getHeartByDateRangeTimestampIntraday(
        date: java.time.LocalDate,
        endDate: java.time.LocalDate,
        detailLevel: kotlin.String,
        startTime: kotlin.String,
        endTime: kotlin.String
    ): HttpResponse<Unit> {
        val localVariableAuthNames = listOf<String>("oauth2")

        val localVariableBody =
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig =
            RequestConfig<kotlin.Any?>(
                RequestMethod.GET,
                "/1/user/-/activities/heart/date/{date}/{end-date}/{detail-level}/time/{start-time}/{end-time}.json".replace(
                    "{" + "date" + "}",
                    "$date"
                ).replace(
                    "{" + "end-date" + "}",
                    "$endDate"
                ).replace(
                    "{" + "detail-level" + "}",
                    "$detailLevel"
                ).replace(
                    "{" + "start-time" + "}",
                    "$startTime"
                ).replace("{" + "end-time" + "}", "$endTime"),
                query = localVariableQuery,
                headers = localVariableHeaders,
                requiresAuthentication = true
            )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }

    /**
     * GET /1/user/-/activities/heart/date/{date}/1d/{detail-level}/time/{start-time}/{end-time}.json
     * Get Heart Rate Intraday Time Series
     * Returns the intraday time series for a given resource in the format requested. If your application has the appropriate access, your calls to a time series endpoint for a specific day (by using start and end dates on the same day or a period of 1d), the response will include extended intraday values with a one-minute detail level for that day. Unlike other time series calls that allow fetching data of other users, intraday data is available only for and to the authorized user.
     * @param date The date in the format of yyyy-MM-dd or today.
     * @param detailLevel The number of data points to include either 1sec, 1min, 5min or 15min.
     * @param startTime The start of the period in the format of HH:mm.
     * @param endTime The end time of the period in the format of HH:mm.
     * @return void
     */
    open suspend fun getHeartByDateTimestampIntraday(
        date: java.time.LocalDate,
        detailLevel: kotlin.String,
        startTime: kotlin.String,
        endTime: kotlin.String
    ): HttpResponse<Unit> {
        val localVariableAuthNames = listOf<String>("oauth2")

        val localVariableBody =
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig =
            RequestConfig<kotlin.Any?>(
                RequestMethod.GET,
                "/1/user/-/activities/heart/date/{date}/1d/{detail-level}/time/{start-time}/{end-time}.json".replace(
                    "{" + "date" + "}",
                    "$date"
                ).replace(
                    "{" + "detail-level" + "}",
                    "$detailLevel"
                ).replace(
                    "{" + "start-time" + "}",
                    "$startTime"
                ).replace("{" + "end-time" + "}", "$endTime"),
                query = localVariableQuery,
                headers = localVariableHeaders,
                requiresAuthentication = true
            )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }
}
