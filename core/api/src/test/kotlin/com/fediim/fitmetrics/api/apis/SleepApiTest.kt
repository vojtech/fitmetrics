/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.fediim.fitmetrics.api.apis

import com.fediim.fitmetrics.api.apis.SleepApi
import io.kotlintest.specs.ShouldSpec

class SleepApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of SleepApi
        // val apiInstance = SleepApi()

        // to test addSleep
        should("test addSleep") {
            // uncomment below to test addSleep
            // val startTime : kotlin.String = startTime_example // kotlin.String | Start time includes hours and minutes in the format HH:mm.
            // val duration : kotlin.Int = 56 // kotlin.Int | Duration in milliseconds.
            // val date : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | Log entry in the format yyyy-MM-dd.
            // apiInstance.addSleep(startTime, duration, date)
        }

        // to test deleteSleep
        should("test deleteSleep") {
            // uncomment below to test deleteSleep
            // val logId : kotlin.String = logId_example // kotlin.String | The ID of the sleep log to be deleted.
            // apiInstance.deleteSleep(logId)
        }

        // to test getSleepByDate
        should("test getSleepByDate") {
            // uncomment below to test getSleepByDate
            // val date : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | The date of records to be returned. In the format yyyy-MM-dd.
            // apiInstance.getSleepByDate(date)
        }

        // to test getSleepByDateRange
        should("test getSleepByDateRange") {
            // uncomment below to test getSleepByDateRange
            // val baseDate : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | The date of records to be returned. In the format yyyy-MM-dd.
            // val endDate : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | The date of records to be returned. In the format yyyy-MM-dd.
            // apiInstance.getSleepByDateRange(baseDate, endDate)
        }

        // to test getSleepGoal
        should("test getSleepGoal") {
            // uncomment below to test getSleepGoal
            // apiInstance.getSleepGoal()
        }

        // to test getSleepList
        should("test getSleepList") {
            // uncomment below to test getSleepList
            // val sort : kotlin.String = sort_example // kotlin.String | The sort order of entries by date asc (ascending) or desc (descending).
            // val offset : kotlin.Int = 56 // kotlin.Int | The offset number of entries.
            // val limit : kotlin.Int = 56 // kotlin.Int | The maximum number of entries returned (maximum;100).
            // val beforeDate : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | The date in the format yyyy-MM-ddTHH:mm:ss. Only yyyy-MM-dd is required. Either beforeDate or afterDate should be specified.
            // val afterDate : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | The date in the format yyyy-MM-ddTHH:mm:ss.
            // apiInstance.getSleepList(sort, offset, limit, beforeDate, afterDate)
        }

        // to test updateSleepGoal
        should("test updateSleepGoal") {
            // uncomment below to test updateSleepGoal
            // val minDuration : kotlin.String = minDuration_example // kotlin.String | Duration of sleep goal.
            // apiInstance.updateSleepGoal(minDuration)
        }
    }
}
