/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.fediim.fitmetrics.api.apis

import com.fediim.fitmetrics.api.apis.AuthorizationApi
import io.kotlintest.specs.ShouldSpec

class AuthorizationApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of AuthorizationApi
        // val apiInstance = AuthorizationApi()

        // to test introspect
        should("test introspect") {
            // uncomment below to test introspect
            // val token : kotlin.String = token_example // kotlin.String | OAuth 2.0 token to retrieve the state of
            // apiInstance.introspect(token)
        }

        // to test oauthToken
        should("test oauthToken") {
            // uncomment below to test oauthToken
            // val clientId : kotlin.String = clientId_example // kotlin.String | This is your Fitbit API application id from your settings on dev.fitbit.com.
            // val grantType : kotlin.String = grantType_example // kotlin.String | Authorization grant type. Valid values are 'authorization_code' and 'refresh_token'.
            // val authorization : kotlin.String = authorization_example // kotlin.String | The Authorization header must be set to 'Basic' followed by a space, then the Base64 encoded string of your application's client id and secret concatenated with a colon. For example, 'Basic Y2xpZW50X2lkOmNsaWVudCBzZWNyZXQ='. The Base64 encoded string, 'Y2xpZW50X2lkOmNsaWVudCBzZWNyZXQ=', is decoded as 'client_id:client secret'.
            // val contentType : kotlin.String = contentType_example // kotlin.String | Request Content-Type. Should be application/x-www-form-urlencoded
            // val code : kotlin.String = code_example // kotlin.String | Authorization code received in the redirect as URI parameter. Required if using the Authorization Code flow.
            // val expiresIn : kotlin.String = expiresIn_example // kotlin.String | Specify the desired access token lifetime. Defaults to 28800 for 8 hours. The other valid value is 3600 for 1 hour.
            // val redirectUri : kotlin.String = redirectUri_example // kotlin.String | Uri to which the access token will be sent if the request is successful. Required if specified in the redirect to the authorization page. Must be exact match.
            // val refreshToken : kotlin.String = refreshToken_example // kotlin.String | Refresh token issued by Fitbit. Required if 'grant_type' is 'refresh_token'.
            // val state : kotlin.String = state_example // kotlin.String | Required if specified in the redirect uri of the authorization page. Must be an exact match.
            // apiInstance.oauthToken(clientId, grantType, authorization, contentType, code, expiresIn, redirectUri, refreshToken, state)
        }

        // to test revoke
        should("test revoke") {
            // uncomment below to test revoke
            // val token : kotlin.String = token_example // kotlin.String | The access token or refresh token to be revoked
            // apiInstance.revoke(token)
        }
    }
}
