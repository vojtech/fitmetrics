/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.fediim.fitmetrics.api.apis

import com.fediim.fitmetrics.api.apis.HeartRateIntradayTimeSeriesApi
import io.kotlintest.specs.ShouldSpec

class HeartRateIntradayTimeSeriesApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of HeartRateIntradayTimeSeriesApi
        // val apiInstance = HeartRateIntradayTimeSeriesApi()

        // to test getHeartByDateIntraday
        should("test getHeartByDateIntraday") {
            // uncomment below to test getHeartByDateIntraday
            // val date : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | The date in the format of yyyy-MM-dd or today.
            // val detailLevel : kotlin.String = detailLevel_example // kotlin.String | The number of data points to include either 1sec, 1min, 5min or 15min.
            // apiInstance.getHeartByDateIntraday(date, detailLevel)
        }

        // to test getHeartByDateRangeIntraday
        should("test getHeartByDateRangeIntraday") {
            // uncomment below to test getHeartByDateRangeIntraday
            // val date : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | The date in the format of yyyy-MM-dd or today.
            // val endDate : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | The end date in the format of yyyy-MM-dd or today.
            // val detailLevel : kotlin.String = detailLevel_example // kotlin.String | The number of data points to include either 1sec, 1min, 5min or 15min.
            // apiInstance.getHeartByDateRangeIntraday(date, endDate, detailLevel)
        }

        // to test getHeartByDateRangeTimestampIntraday
        should("test getHeartByDateRangeTimestampIntraday") {
            // uncomment below to test getHeartByDateRangeTimestampIntraday
            // val date : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | The date in the format of yyyy-MM-dd or today.
            // val endDate : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | The end date in the format of yyyy-MM-dd or today.
            // val detailLevel : kotlin.String = detailLevel_example // kotlin.String | The number of data points to include either 1sec, 1min, 5min or 15min.
            // val startTime : kotlin.String = startTime_example // kotlin.String | The start of the period in the format of HH:mm.
            // val endTime : kotlin.String = endTime_example // kotlin.String | The end time of the period in the format of HH:mm.
            // apiInstance.getHeartByDateRangeTimestampIntraday(date, endDate, detailLevel, startTime, endTime)
        }

        // to test getHeartByDateTimestampIntraday
        should("test getHeartByDateTimestampIntraday") {
            // uncomment below to test getHeartByDateTimestampIntraday
            // val date : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | The date in the format of yyyy-MM-dd or today.
            // val detailLevel : kotlin.String = detailLevel_example // kotlin.String | The number of data points to include either 1sec, 1min, 5min or 15min.
            // val startTime : kotlin.String = startTime_example // kotlin.String | The start of the period in the format of HH:mm.
            // val endTime : kotlin.String = endTime_example // kotlin.String | The end time of the period in the format of HH:mm.
            // apiInstance.getHeartByDateTimestampIntraday(date, detailLevel, startTime, endTime)
        }
    }
}
